This is Chocolate Doom without SDL.

This project does not replace SDL with any other interface.

This is, by design, a version of Doom you cannot play.

It is a fork with minimal dependencies - to make new source ports easier.

The only indication it's working is text in the terminal - the familiar 
start-up routine, followed by the names of sound effects. 

In the spirit of every Doom-related project having a name which is either 
completely on-the-nose (ZDoom, Boom, Smooth Doom) or else as oblique as 
possible (Zandronum, Marine's Best Friend, Hideous Destructor), I have chosen
to name this:

# Johnny Got His Gun

This is a version of Doom which, as hosted here:
 * Has no video output
 * Has no audio output
 * Has no joystick input
 * Has no mouse input
 * Has no keyboard input

And yet, with the full accuracy of Chocolate Doom 3.0.1:
 * Still maintains internal state
 * Still renders frames
 * Still reads music
 * Still tracks sound effects

As provided, several sub-projects still depend on SDL. Chocolate Doom targets
related games like Heretic, Hexen, and Strife. Those are largely unchanged. 
Much of their code is shared with Chocolate Doom proper. It should be roughly
as easy to extend this project to them as it is to exclude them and focus on 
Doom. 

As provided, you can't just point autotools at it and run the makefile, 
because Chocolate Doom targets several other executables for games like
Heretic, Hexen, and Strife. Those projects are largely left untouched. Much of
their code is shared with Chocolate Doom proper. It should be roughly as easy
to extend this project to them as it is to exclude them and focus on Doom. 

Chocolate Doom was chosen as a basis, not because of its limited scope, but
because it is written entirely in C. Most other simple or low-end versions 
maintain the original 1990s ASM, which is not helpful for any target besides
DOS. And nearly every DOS system is already handled by FastDoom. 






# Chocolate Doom

Chocolate Doom aims to accurately reproduce the original DOS version of
Doom and other games based on the Doom engine in a form that can be
run on modern computers.

Originally, Chocolate Doom was only a Doom source port. The project
now includes ports of Heretic and Hexen, and Strife.

Chocolate Doom’s aims are:

 * To always be 100% Free and Open Source software.
 * Portability to as many different operating systems as possible.
 * Accurate reproduction of the original DOS versions of the games,
   including bugs.
 * Compatibility with the DOS demo, configuration and savegame files.
 * To provide an accurate retro “feel” (display and input should
   behave the same).

More information about the philosophy and design behind Chocolate Doom
can be found in the PHILOSOPHY file distributed with the source code.

## Setting up gameplay

For instructions on how to set up Chocolate Doom for play, see the
INSTALL file.

## Configuration File

Chocolate Doom is compatible with the DOS Doom configuration file
(normally named `default.cfg`). Existing configuration files for DOS
Doom should therefore simply work out of the box. However, Chocolate
Doom also provides some extra settings. These are stored in a
separate file named `chocolate-doom.cfg`.

The configuration can be edited using the chocolate-setup tool.

## Command line options

Chocolate Doom supports a number of command line parameters, including
some extras that were not originally suported by the DOS versions. For
binary distributions, see the CMDLINE file included with your
download; more information is also available on the Chocolate Doom
website.

## Playing TCs

With Vanilla Doom there is no way to include sprites in PWAD files.
Chocolate Doom’s ‘-file’ command line option behaves exactly the same
as Vanilla Doom, and trying to play TCs by adding the WAD files using
‘-file’ will not work.

Many Total Conversions (TCs) are distributed as a PWAD file which must
be merged into the main IWAD. Typically a copy of DEUSF.EXE is
included which performs this merge. Chocolate Doom includes a new
option, ‘-merge’, which will simulate this merge. Essentially, the
WAD directory is merged in memory, removing the need to modify the
IWAD on disk.

To play TCs using Chocolate Doom, run like this:

```
chocolate-doom -merge thetc.wad
```

Here are some examples:

```
chocolate-doom -merge batman.wad -deh batman.deh vbatman.deh  (Batman Doom)
chocolate-doom -merge aoddoom1.wad -deh aoddoom1.deh  (Army of Darkness Doom)
```

## Other information

 * Chocolate Doom includes a number of different options for music
   playback. See the README.Music file for more details.

 * More information, including information about how to play various
   classic TCs, is available on the Chocolate Doom website:

     https://www.chocolate-doom.org/

   You are encouraged to sign up and contribute any useful information
   you may have regarding the port!

 * Chocolate Doom is not perfect. Although it aims to accurately
   emulate and reproduce the DOS executables, some behavior can be very
   difficult to reproduce. Because of the nature of the project, you
   may also encounter Vanilla Doom bugs; these are intentionally
   present; see the NOT-BUGS file for more information.

   New bug reports can be submitted to the issue tracker on Github:

     https://github.com/chocolate-doom/chocolate-doom/issues

 * Source code patches are welcome, but please follow the style
   guidelines - see the file named HACKING included with the source
   distribution.

 * Chocolate Doom is distributed under the GNU GPL. See the COPYING
   file for more information.

 * Please send any feedback, questions or suggestions to
   chocolate-doom-dev-list@chocolate-doom.org. Thanks!
